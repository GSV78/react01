{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/UserInfo/UserInfo.module.css","components/Profile/MyPosts/InputPost/InputPost.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/UserInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/MyPosts/InputPost/InputPost.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/UserInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/UserInfo/Contact.jsx","components/Profile/UserInfo/ProfileForm/ProfileForm.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["withAuthRedirect","Component","connect","state","isAuth","auth","props","to","module","exports","maxLength30","maxLengthCreator","InputPostReduxForm","reduxForm","form","className","css","inputPost","onSubmit","handleSubmit","Field","textarea","placeholder","name","component","Textarea","validate","button","InputPost","values","addPost","Post","post","postAvaAndText","alt","src","ava","message","likeAndDelete","likesCount","onClick","deletePost","id","MyPosts","posts","postsData","map","myPost","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","profileStatusInner","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","userId","currentUserId","Contact","contactTitle","title","contactValue","ProfileFormReduxForm","userProfile","error","contacts","Object","keys","ind","createField","Input","profileFormInner","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactsTitle","buttonSetProfileEditMode","formSummaryError","ProfileData","isOwner","isContactsNotEmpty","reduce","prev","cur","UserInfo","InputAva","setInputAva","EditMode","Preloader","userInfo","user","userAva","photos","small","nophoto","description","inputAva","type","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Profile","content","profilePage","ProfileAPIComponent","this","match","params","getProfile","getStatus","refreshProfile","prevProps","pathname","React","compose","useMatch"],"mappings":"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","file":"static/js/3.352f611a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n// export const withAuthRedirect = (Component) => {\r\n//     class RedirectComponent extends React.Component {\r\n//         render() {\r\n//             if (!this.props.isAuth) {\r\n//                 return <Navigate to={'/login'} />\r\n//             }\r\n//             return (\r\n//                 <Component {...this.props} />\r\n//             )\r\n//         }\r\n//     }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return (\r\n            <Component {...props} />\r\n        )\r\n    }\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserInfo_user__amASJ\",\"inputAva\":\"UserInfo_inputAva__2U4o5\",\"userAva\":\"UserInfo_userAva__3K8Hw\",\"banner\":\"UserInfo_banner__uVUgY\",\"description\":\"UserInfo_description__aCcK7\",\"name\":\"UserInfo_name__2NG0I\",\"aboutMe\":\"UserInfo_aboutMe__1e_G0\",\"fullName\":\"UserInfo_fullName__2ZSo0\",\"contactsTitle\":\"UserInfo_contactsTitle__3oPjD\",\"contactTitle\":\"UserInfo_contactTitle__34izm\",\"contactValue\":\"UserInfo_contactValue__xFHHN\",\"lookingForAJob\":\"UserInfo_lookingForAJob__2v-E8\",\"lookingForAJobDescription\":\"UserInfo_lookingForAJobDescription__1T8Gz\",\"buttonSetProfileEditMode\":\"UserInfo_buttonSetProfileEditMode__1J0I8\",\"formSummaryError\":\"UserInfo_formSummaryError__2YmFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputPost\":\"InputPost_inputPost__1TPgx\",\"textarea\":\"InputPost_textarea__bY3ll\",\"button\":\"InputPost_button__3a2u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"MyPosts_myPost__3Jojo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2fpzV\",\"postAvaAndText\":\"Post_postAvaAndText__2lQqt\",\"likeAndDelete\":\"Post_likeAndDelete__fTruE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2njXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatusInner\":\"ProfileStatus_profileStatusInner__18sF8\"};","import { reduxForm, Field } from 'redux-form'\r\nimport { maxLengthCreator } from '../../../../utils/validators/validators'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\r\nimport css from './InputPost.module.css'\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst InputPostForm = (props) => {\r\n    return (\r\n        <form className={css.inputPost} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                className={css.textarea}\r\n                placeholder={'Введите сообщение'}\r\n                name={'inputPost'}\r\n                component={Textarea}\r\n                validate={[maxLength30]}\r\n            />\r\n            <button className={css.button}>Запостить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst InputPostReduxForm = reduxForm({\r\n    form: 'inputPost',\r\n})(InputPostForm)\r\n\r\nconst InputPost = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.addPost(values.inputPost)\r\n        values.inputPost = ''\r\n    }\r\n    return (\r\n        <InputPostReduxForm onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default InputPost","import css from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    let onDelete = () => {\r\n        props.deletePost(props.id)\r\n    }\r\n    return (\r\n        <div className={css.post}>\r\n            <div className={css.postAvaAndText}>\r\n                <img alt='ava' src={props.ava} />\r\n                <p> {props.message} </p>\r\n            </div>\r\n            <div className={css.likeAndDelete}>\r\n                <span>like: {props.likesCount} </span>\r\n                <button onClick={onDelete}>Удалить</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport InputPost from './InputPost/InputPost.jsx';\r\nimport css from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = props.postsData.map(post => <Post ava={props.ava} message={post.message} likesCount={post.likesCount} id={post.id} key={post.id} deletePost={props.deletePost} />)\r\n    return (<>\r\n        <hr />\r\n        <div className={css.myPost}>\r\n            <h3> Мои посты.</h3>\r\n            <InputPost\r\n                addPost={props.addPost}\r\n            />\r\n            {\r\n                posts\r\n            }\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default MyPosts","import React, { useEffect, useState } from 'react'\r\nimport css from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if (props.userId === props.currentUserId) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={css.profileStatusInner}>\r\n            {!editMode\r\n                ? (<div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || 'Статус не установлен.'}\r\n                    </span>\r\n                </div>)\r\n                : (<div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                    />\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n\r\n\r\n\r\n// state = {\r\n//     editMode: false,\r\n//     status: this.props.status\r\n// }\r\n\r\n// activateEditMode = () => {\r\n//     debugger\r\n//     if (this.props.userId === this.props.currentUserId) {\r\n//         this.setState({\r\n//             editMode: true\r\n//         })\r\n//     }\r\n// }\r\n\r\n// deactivateEditMode = () => {\r\n//     this.setState({\r\n//         editMode: false\r\n//     })\r\n//     this.props.updateStatus(this.state.status)\r\n// }\r\n\r\n// onStatusChange = (e) => {\r\n//     this.setState({\r\n//         status: e.currentTarget.value\r\n//     })\r\n// }\r\n\r\n// componentDidUpdate(prevProps, prevState) {\r\n//     if (prevProps.status !== this.props.status) {\r\n//         this.setState({\r\n//             status: this.props.status\r\n//         })\r\n//     }\r\n// }\r\n// render() {","import css from './UserInfo.module.css';\r\n\r\nconst Contact = (props) => {\r\n    return (<div>\r\n        <span className={css.contactTitle}> {props.title}:</span>\r\n        <span className={css.contactValue} >{props.value}</span>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import css from './../UserInfo.module.css'\r\nimport { createField, Input, Textarea } from './../../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form'\r\n\r\nconst ProfileForm = ({ handleSubmit, userProfile, error }) => {\r\n    let contacts = Object.keys(userProfile.contacts).map(ind => {\r\n        return (<div key={ind}>\r\n            <span className={css.contactTitle}> {ind} </span>\r\n            {createField(ind, 'contacts.' + ind, 'text', Input, [])}\r\n        </div>)\r\n    })\r\n    return (\r\n        <form className={css.profileFormInner} onSubmit={handleSubmit}>\r\n            <div className={css.fullName}>\r\n                <b>Твоё полное имя: </b>{createField('Имя', 'fullName', 'text', Input, [])}\r\n            </div>\r\n            <div className={css.aboutMe}>\r\n                <b>Расскажи о cебе: </b>{createField('О себе', 'aboutMe', 'text', Textarea, [])}\r\n            </div>\r\n            <div className={css.lookingForAJob}>\r\n                <b>Ищешь работу? </b>{createField(null, 'lookingForAJob', 'checkbox', Input, [], 'да, ищу')}\r\n            </div>\r\n            <div className={css.lookingForAJobDescription}>\r\n                <b>Какую работу ты ищешь? </b>{createField('Твои профессиональные навыки', 'lookingForAJobDescription', 'text', Textarea, [])} {userProfile.lookingForAJobDescription}\r\n            </div>\r\n            <div className={css.contactsTitle}>Твои контакты:</div>\r\n            <div className={css.contacts}> {contacts} </div>\r\n            <div className={css.buttonSetProfileEditMode}><button>Сохранить свой профиль</button></div>\r\n            {error\r\n                ? (<div className={css.formSummaryError}>\r\n                    {error}\r\n                </div>)\r\n                : null\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileFormReduxForm = reduxForm({ form: 'profile' })(ProfileForm)\r\n\r\nexport default ProfileFormReduxForm","import css from './UserInfo.module.css';\r\nimport nophoto from '../../../assets/images/nophoto.jpg'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport Contact from './Contact';\r\nimport ProfileFormReduxForm from './ProfileForm/ProfileForm';\r\n\r\nconst ProfileData = ({ userProfile, setEditMode, isOwner }) => {\r\n    let contacts = Object.keys(userProfile.contacts).map(ind => {\r\n        if (userProfile.contacts[ind]) {\r\n            return <Contact key={ind} title={ind} value={userProfile.contacts[ind]} />\r\n        }\r\n        return null\r\n    })\r\n\r\n    let isContactsNotEmpty = contacts.reduce((prev, cur) => prev || !!cur, false)\r\n\r\n    return (\r\n        <>\r\n            <div className={css.aboutMe}> {userProfile.aboutMe != null ? `Немного обо мне: ${userProfile.aboutMe}` : null} </div>\r\n            <div className={css.lookingForAJob}> {userProfile.lookingForAJob ? 'Нахожусь в поиске работы.' : 'В работе не нуждаюсь.'} </div>\r\n            <div className={css.lookingForAJobDescription}> {userProfile.lookingForAJob ? userProfile.lookingForAJobDescription : null} </div>\r\n            <div className={css.contactsTitle}> {isContactsNotEmpty ? 'Мои контакты:' : null} </div>\r\n            <div className={css.contacts}> {isContactsNotEmpty ? contacts : null} </div>\r\n            <div className={css.buttonSetProfileEditMode}>{isOwner ? <button onClick={() => setEditMode(true)}>Отредактировать свой профиль</button> : null}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst UserInfo = (props) => {\r\n    const [InputAva, setInputAva] = useState(false)\r\n\r\n    const [EditMode, setEditMode] = useState(false)\r\n\r\n    if (props.userProfile == null) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n    const setAva = () => {\r\n        if (props.userProfile.userId === props.currentUserId) {\r\n            setInputAva(!InputAva)\r\n        }\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n            setInputAva(false)\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={css.userInfo}>\r\n            <div className={css.user}>\r\n                <div className={css.userAva}>\r\n                    <img onDoubleClick={setAva} alt='ava' src={props.userProfile.photos.small != null ? props.userProfile.photos.small : nophoto} />\r\n                </div>\r\n                <div className={css.description}>\r\n                    <div className={css.name}> {props.userProfile.fullName} </div>\r\n                    <ProfileStatusWithHooks\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus}\r\n                        userId={props.userProfile.userId}\r\n                        currentUserId={props.currentUserId}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={css.inputAva}>{props.isOwner && InputAva ? <input type='file' onChange={onMainPhotoSelected} /> : null}</div>\r\n            {!EditMode\r\n                ? <ProfileData\r\n                    userProfile={props.userProfile}\r\n                    setEditMode={setEditMode}\r\n                    isOwner={props.isOwner}\r\n                />\r\n                : <ProfileFormReduxForm\r\n                    initialValues={props.userProfile}\r\n                    userProfile={props.userProfile}\r\n                    onSubmit={onSubmit}\r\n                />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import MyPosts from './MyPosts/MyPosts';\r\nimport css from './Profile.module.css';\r\nimport UserInfo from './UserInfo/UserInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={css.content}>\r\n            <UserInfo\r\n                userProfile={props.profilePage.userProfile}\r\n                status={props.profilePage.status}\r\n                updateStatus={props.updateStatus}\r\n                currentUserId={props.currentUserId}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            {\r\n                props.profilePage.userProfile && props.profilePage.userProfile.userId === props.currentUserId\r\n                    ? <MyPosts\r\n                        postsData={props.profilePage.postsData}\r\n                        ava={props.profilePage.userProfile.photos.small}\r\n                        addPost={props.addPost}\r\n                        deletePost={props.deletePost}\r\n                    />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { addPost, deletePost, getProfile, getStatus, updateStatus, savePhoto, saveProfile } from './../../redux/profile-reducer'\r\nimport { connect } from 'react-redux';\r\nimport { useMatch } from 'react-router-dom';\r\nimport Profile from './Profile'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileAPIComponent extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match ? this.props.match.params.userId : this.props.currentUserId;\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match && prevProps.match && this.props.match.pathname !== prevProps.match.pathname) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst ProfileMatch = (props) => {\r\n    const isOwner = (props.currentUserId === props.profilePage.userProfile.userId)\r\n    let match = useMatch(\"/profile/:userId\");\r\n    return (\r\n        <ProfileAPIComponent {...props} match={match} isOwner={isOwner} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        currentUserId: state.auth.id,\r\n        status: state.profilePage.status,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addPost, deletePost,\r\n        getProfile,\r\n        getStatus, updateStatus, savePhoto, saveProfile\r\n    }),\r\n    withAuthRedirect,\r\n)(ProfileMatch)"],"sourceRoot":""}